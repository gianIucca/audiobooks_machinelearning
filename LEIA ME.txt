Caso de negócios de audiolivros

Imagine que você recebeu os dados de um aplicativo de audiolivros que contém os dados de todos que compraram pelo menos um livro na loja. O objetivo desse projeto é de criar um algoritmo de Machine Learning baseado no conjunto de dados que nos foi fornecido pela empresa para descobrir se um cliente pode ou não comprar novamente na empresa de audiolivros.
A idéia principal é separar os potenciais clientes daqueles que tem uma baixa probabilidade de comprar outro produto em nossa loja, sendo assim, não tem razão para investir dinheiro em propagandas para pessoas que não irão comprar novamente em nossa loja.É possível salvar grandes quantias de dinheiro se investirmos em propaganda para o público alvo correto, ou seja, com um bom algoritmo de Machine Learning, podemos gastar menos em publicidade e ainda assim atingir um nível de vendas maior.Além disso, o modelo pode identificar quais são as métricas importantes para decidir se um cliente poderá voltar a fazer negócios com a empresa, e identificar novos compradores agrega valor e um potencial de crescimento da empresa.
Temos um arquivo .csv que nos mostra todos os dados que foram colhidos pela empresa. Dentro deles, temos: o ID do cliente, a soma do tamanho dos livros comprados, a média do tamanho dos livros comprados, a soma do preço dos livros comprados, a média do preço dos livros comprados, review (uma variável Boolean que diz se o cliente deixou um review ou não), caso o cliente tenha deixado um review, qual foi a nota dele, o total de minutos de audiolivros que o cliente escutou, quantos audiolivros ele finalizou a leitura(outra variável Boolean, ou ele acabou o livro ou não acabou), o número de pedidos de suporte e por fim a última vez que o cliente visitou o aplicativo(em dias).
Todos esses dados são considerados nossos inputs(com a exceção do ID do cliente, que é completamente arbitrário e não possui informações que nos interessam).
Os nossos targets são também uma variável do tipo Boolean(0 ou 1).Temos um periodo de 2 anos de inputs, e depois de 6 meses como targets, então basicamente estamos nos baseando nos dados dos últimos dois anos para saber se um cliente irá voltar a comprar na nossa loja nos próximos 6 meses.Foi escolhido o tempo de 6 meses para os targets porque é uma quantidade razoável de tempo, e se o nosso cliente não voltar a comprar dentro de 6 meses, é provável que ele não tenha gostado do aplicativo ou tenha trocado para um outro aplicativo competidor.
Nossa tarefa é simples, criamos um algoritmo de Machine Learning que é capaz de prever se um cliente irá voltar a comprar conosco ou não.Em geral, esse problema é um problema de classificação com duas classes: não irá voltar a comprar na loja, representado por 0's, ou voltará a comprar na loja, representado por 1's.

Resumo do projeto:
O primeiro passo a se fazer é importar as bibliotecas que usaremos no projeto, depois iremos extrair os dados do nosso arquivo .csv, depois iremos pré-processar todos os dados que foram colhidos, após isso, padronizaremos os inputs, iremos misturar todos os dados visto que o jeito padrão que eles estavam dispostos era por data, mas para que o modelo seja bom(e isso é de extrema importancia para um cientista de dados) devemos ter um modelo de dados completamente aleatório.O próximo passo é balancear o nosso dataset em 80% treinamento, 10% validação e 10% de testes, visto que é uma maneira amplamente utilizada dentro do data science, e então salvar os 3 datasets(treinamento, validação e testes) em um formato adequado para se trabalhar(.npz).
Depois disso, vamos carregar os arquivos .npz no programa, criar o modelo e testar ele. Lembrando que para testar o modelo, é necessário testar ele em um dataset onde o algoritmo nunca viu antes. Depois de tudo isso, podemos utilizar o nosso algoritmo de Machine Learning para prever se um cliente voltará ou não a comprar na nossa loja, com uma precisão aproximada de 91%(a precisão mudará sempre que voce rodar o código, pois o dataset será misturado de uma maneira diferente toda vez)

Lembrete:
Esse projeto foi desenvolvido por um estudante de Machine Learning e de Data Science, então eu fiz a maioria dos comentários do código com o intuito de poder me lembrar das diversas funções do código, portanto muito dos comentários poderá ser inútil e irrelevante para um cientista de dados profissional, mas para os estudantes (assim como eu) os comentários poderão ser de muita ajuda para entender o modelo criado.
Obrigado pela atenção e se divirta.

Lembrete 2:
Dentro do arquivo .ipynb criado com o jupyter, só tem as informações e os comentários criados por mim todos em inglês, visto que é a maneira que estou aprendendo sobre Machine Learning, mas caso você não tenha conhecimento de algum termo usado, fique a vontade para perguntar sobre a tradução e eu responderei.
